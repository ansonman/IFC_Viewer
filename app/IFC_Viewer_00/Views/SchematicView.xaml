<Window x:Class="IFC_Viewer_00.Views.SchematicView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="原理圖" Height="600" Width="900"
    UseLayoutRounding="True"
    SnapsToDevicePixels="True">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="140"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Margin="8" Grid.Row="0">
            <TextBlock Text="節點: " VerticalAlignment="Center"/>
            <TextBlock Text="{Binding Nodes.Count}" FontWeight="Bold" Margin="4,0" VerticalAlignment="Center"/>
            <TextBlock Text="邊: " Margin="16,0,0,0" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding Edges.Count}" FontWeight="Bold" Margin="4,0" VerticalAlignment="Center"/>
            <Button Content="重置視圖" Margin="16,0,0,0" Padding="8,2" Click="ResetView_Click"/>
            <Button Content="重新布局" Margin="8,0,0,0" Padding="8,2" Click="Relayout_Click"/>
            <Button Content="存成 PNG" Margin="8,0,0,0" Padding="8,2" Click="SavePng_Click"/>
            <Separator Margin="8,0"/>
            <Button Content="點 +" Margin="0,0,4,0" Padding="8,2" Command="{Binding IncreaseNodeSizeCommand}"/>
            <Button Content="點 -" Margin="0,0,8,0" Padding="8,2" Command="{Binding DecreaseNodeSizeCommand}"/>
            <Button Content="線 +" Margin="0,0,4,0" Padding="8,2" Command="{Binding IncreaseLineWidthCommand}"/>
            <Button Content="線 -" Margin="0,0,8,0" Padding="8,2" Command="{Binding DecreaseLineWidthCommand}"/>
            <Button Content="Snap" Margin="0" Padding="8,2" Command="{Binding ToggleSnapCommand}"/>
            <Button Content="Levels" Margin="8,0,0,0" Padding="8,2" Command="{Binding ToggleLevelsCommand}"/>

            <Separator Margin="8,0"/>
            <!-- Phase 2: Layer Toggles -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <CheckBox Content="終端" Margin="4,0" IsChecked="{Binding ShowTerminals}"/>
                <CheckBox Content="管線" Margin="4,0" IsChecked="{Binding ShowPipes}"/>
                <CheckBox Content="標籤" Margin="4,0" IsChecked="{Binding ShowLabels}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0,0,0">
                <CheckBox Content="顯示縮放錨點" Margin="4,0" IsChecked="{Binding ShowZoomAnchor}"/>
            </StackPanel>

            <Separator Margin="8,0"/>
            <!-- Legend + Color settings (Phase 0) -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" Margin="8,0" VerticalAlignment="Center">
                    <Rectangle Width="14" Height="14" Fill="{Binding TerminalBrush}" Stroke="#333" StrokeThickness="0.5" RadiusX="2" RadiusY="2"/>
                    <TextBlock Text=" FlowTerminal" Margin="4,0,8,0" VerticalAlignment="Center"/>
                    <Button Content="換色" Padding="6,2" Command="{Binding CycleTerminalColorCommand}"/>
                    <Button Content="選色…" Padding="6,2" Margin="4,0,0,0" Click="PickTerminalColor_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="12,0" VerticalAlignment="Center">
                    <Rectangle Width="14" Height="14" Fill="{Binding PipeNodeBrush}" Stroke="#333" StrokeThickness="0.5" RadiusX="2" RadiusY="2"/>
                    <TextBlock Text=" Pipe 節點" Margin="4,0,8,0" VerticalAlignment="Center"/>
                    <Button Content="換色" Padding="6,2" Command="{Binding CyclePipeNodeColorCommand}"/>
                    <Button Content="選色…" Padding="6,2" Margin="4,0,0,0" Click="PickPipeNodeColor_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="12,0" VerticalAlignment="Center">
                    <Rectangle Width="24" Height="4" Fill="{Binding PipeEdgeBrush}" Stroke="#333" StrokeThickness="0.5"/>
                    <TextBlock Text=" Pipe 線" Margin="4,0,8,0" VerticalAlignment="Center"/>
                    <Button Content="換色" Padding="6,2" Command="{Binding CyclePipeEdgeColorCommand}"/>
                    <Button Content="選色…" Padding="6,2" Margin="4,0,0,0" Click="PickPipeEdgeColor_Click"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Canvas x:Name="Canvas" Margin="8" Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}" Background="Transparent"
            UseLayoutRounding="True" SnapsToDevicePixels="True">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="ZoomTransform" ScaleX="1" ScaleY="1"/>
                        <TranslateTransform x:Name="PanTransform" X="0" Y="0"/>
                    </TransformGroup>
                </Canvas.RenderTransform>
                <!-- Level Lines: 畫在邊與點的下層 -->
                <ItemsControl ItemsSource="{Binding LevelLines}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="0"/>
                            <Setter Property="Canvas.Top" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Visible}" Value="False">
                                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                                        <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                    <Line X1="{Binding X1}" X2="{Binding X2}" Y1="{Binding Y}" Y2="{Binding Y}"
                                      Stroke="#808080" StrokeDashArray="4,4" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    <TextBlock Text="{Binding Name}" FontSize="10" Foreground="#606060"
                                           Canvas.Left="{Binding LabelX}" Canvas.Top="{Binding LabelY}"/>
                            </Grid>
                        </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                </ItemsControl>
                <!-- 無 Ports 提示 Banner -->
                <Border Background="#FFFDEDD0" BorderBrush="#FFE6B422" BorderThickness="1" CornerRadius="4" Padding="8" Visibility="Collapsed">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Edges.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <TextBlock Text="提示：模型未含 IfcRelConnectsPorts 連線，僅顯示節點。" Foreground="#FF7A4E00"/>
                </Border>

                <!-- Edges 先繪製，置於節點之下，避免覆蓋端點視覺 -->
                <ItemsControl ItemsSource="{Binding Edges}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="0"/>
                            <Setter Property="Canvas.Top" Value="0"/>
                            <!-- Phase 2: 邊的可見性受 ShowPipes 控制 -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.ShowPipes, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Line X1="{Binding Start.X}"
                                  Y1="{Binding Start.Y}"
                                  X2="{Binding End.X}"
                                  Y2="{Binding End.Y}"
                                  Stroke="{Binding EdgeBrush}"
                                  StrokeThickness="{Binding Thickness}"
                                  SnapsToDevicePixels="True"
                                  StrokeStartLineCap="Flat"
                                  StrokeEndLineCap="Flat">
                                <!-- Phase 2: 選取強調 -->
                                <Line.Style>
                                    <Style TargetType="Line">
                                        <Setter Property="Stroke" Value="{Binding EdgeBrush}"/>
                                        <Setter Property="StrokeThickness" Value="{Binding Thickness}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="Stroke" Value="OrangeRed"/>
                                                <Setter Property="StrokeThickness" Value="3"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Line.Style>
                                <Line.InputBindings>
                                    <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.EdgeClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                </Line.InputBindings>
                            </Line>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!-- Nodes: 以小黑點呈現（使用中心座標；Canvas.Left/Top 用 TopLeftX/Y） -->
                <ItemsControl ItemsSource="{Binding Nodes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding TopLeftX}"/>
                            <Setter Property="Canvas.Top" Value="{Binding TopLeftY}"/>
                            <!-- Phase 2: 節點的可見性（ShowTerminals/ShowPipes） -->
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DataContext.ShowTerminals, RelativeSource={RelativeSource AncestorType=Window}}" Value="False"/>
                                        <Condition Binding="{Binding IsTerminal}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DataContext.ShowPipes, RelativeSource={RelativeSource AncestorType=Window}}" Value="False"/>
                                        <Condition Binding="{Binding IsPipeNode}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Ellipse Width="{Binding NodeSize}" Height="{Binding NodeSize}" Fill="{Binding NodeBrush}" Stroke="Black" StrokeThickness="0.6"
                                         SnapsToDevicePixels="True">
                                    <Ellipse.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Node.Name}" FontWeight="Bold"/>
                                            <TextBlock Text="{Binding Node.Id}" FontSize="10"/>
                                            <TextBlock Text="{Binding Node.HostIfcType, StringFormat=Host: {0}}" FontSize="10"/>
                                            <TextBlock Text="{Binding Node.IsFromPipeSegment, StringFormat=PipeSegment端點: {0}}" FontSize="10"/>
                                        </StackPanel>
                                    </Ellipse.ToolTip>
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Setter Property="Stroke" Value="Black"/>
                                            <Setter Property="StrokeThickness" Value="0.6"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DataContext.ShowLabels, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                                    <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="Stroke" Value="OrangeRed"/>
                                                    <Setter Property="StrokeThickness" Value="1.6"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>
                                <Grid.InputBindings>
                                    <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.NodeClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Canvas>
        </ScrollViewer>

        <!-- Logs Panel -->
        <Border Grid.Row="2" BorderBrush="#CCC" BorderThickness="1,1,0,0" Background="#FAFAFA" Padding="4">
            <DockPanel>
                <TextBlock Text="Logs" FontWeight="Bold" Margin="0,0,0,4" DockPanel.Dock="Top"/>
                <ListBox ItemsSource="{Binding Logs}" FontFamily="Consolas" FontSize="11"/>
            </DockPanel>
        </Border>
    </Grid>
</Window>
